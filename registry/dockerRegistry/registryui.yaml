---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registryui
  namespace: rack01
  labels:
    app: registryui
    k8s-app: registryui
spec:
  selector:
    matchLabels:
      app: registryui
  replicas: 1
  template:
    metadata:
      labels:
        app: registryui
    spec:
      containers:
      - name: registryui
        image: konradkleine/docker-registry-frontend:v2
        imagePullPolicy: IfNotPresent
        env:
          - name: ENV_DOCKER_REGISTRY_HOST
            value: "https://registry.home.lab"
          - name: ENV_DOCKER_REGISTRY_PORT
            value: "443"

---
apiVersion: v1
kind: Service
metadata:
  name: registryui
  namespace: rack01
  labels:
    app: registryui
    k8s-app: registryui
spec:
  selector:
    app: registryui
  ports:
    - name: tcp80
      protocol: TCP
      port: 8080
      targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: registryui
    k8s-app: registryui
  name: registryui
  namespace: rack01
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    #certmanager.k8s.io/cluster-issuer: "selfsigned-cert"
    cert-manager.io/cluster-issuer: "selfsigned-cert"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  tls:
  - hosts:
    - registryui.home.lab
    secretName: selfsigned-cert-tls
  rules:
  - host: registryui.home.lab
    http:
      paths:
      - backend:
          serviceName: registryui
          servicePort: 8080